// Mocks generated by Mockito 5.4.2 from annotations
// in todo_list_shmr/test/test_doubles/database_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i2;
import 'package:todo_list_shmr/common/domain/database_helper.dart' as _i3;
import 'package:todo_list_shmr/common/task_model/task_configuration.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i3.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get taskTable => (super.noSuchMethod(
        Invocation.getter(#taskTable),
        returnValue: '',
      ) as String);
  @override
  set taskTable(String? _taskTable) => super.noSuchMethod(
        Invocation.setter(
          #taskTable,
          _taskTable,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
      ) as String);
  @override
  set id(String? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get isCompleted => (super.noSuchMethod(
        Invocation.getter(#isCompleted),
        returnValue: '',
      ) as String);
  @override
  set isCompleted(String? _isCompleted) => super.noSuchMethod(
        Invocation.setter(
          #isCompleted,
          _isCompleted,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get description => (super.noSuchMethod(
        Invocation.getter(#description),
        returnValue: '',
      ) as String);
  @override
  set description(String? _description) => super.noSuchMethod(
        Invocation.setter(
          #description,
          _description,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get relevance => (super.noSuchMethod(
        Invocation.getter(#relevance),
        returnValue: '',
      ) as String);
  @override
  set relevance(String? _relevance) => super.noSuchMethod(
        Invocation.setter(
          #relevance,
          _relevance,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get date => (super.noSuchMethod(
        Invocation.getter(#date),
        returnValue: '',
      ) as String);
  @override
  set date(String? _date) => super.noSuchMethod(
        Invocation.setter(
          #date,
          _date,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<_i2.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i4.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.getter(#database),
        )),
      ) as _i4.Future<_i2.Database>);
  @override
  _i4.Future<_i2.Database> initializeDatabase() => (super.noSuchMethod(
        Invocation.method(
          #initializeDatabase,
          [],
        ),
        returnValue: _i4.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.method(
            #initializeDatabase,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Database>);
  @override
  _i4.Future<List<Map<String, dynamic>>> getTaskMapList() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTaskMapList,
          [],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);
  @override
  _i4.Future<int> insertTask(_i5.TaskWidgetConfiguration? task) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTask,
          [task],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  _i4.Future<int> updateTask(_i5.TaskWidgetConfiguration? task) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTask,
          [task],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  _i4.Future<int> deleteTask(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [id],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  _i4.Future<int?> getCount() => (super.noSuchMethod(
        Invocation.method(
          #getCount,
          [],
        ),
        returnValue: _i4.Future<int?>.value(),
      ) as _i4.Future<int?>);
  @override
  _i4.Future<List<_i5.TaskWidgetConfiguration>> getTaskList() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTaskList,
          [],
        ),
        returnValue: _i4.Future<List<_i5.TaskWidgetConfiguration>>.value(
            <_i5.TaskWidgetConfiguration>[]),
      ) as _i4.Future<List<_i5.TaskWidgetConfiguration>>);
}
